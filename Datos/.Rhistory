#Asignacion de base de datos a variable
movies <- read.csv("tmdb-movies.csv")
movies <- read.csv("tmdb-movies.csv")
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------
# General
# --------
# Set del working directory Andrea
setwd("~/2019/UVG/Primer Semestre/Minería de Datos/Proyecto/ProyectoMineriaDeDatos") # Se define el working directory
#---SAMANTHA---
library(foreign)
library(ggplot2)
library(dplyr)
# Se guardan todos los datos en la variable data
dataset17 <- read.spss("20181226152117tZP7bhDRtfJrB42QapodmHRulLk2ZeOh (1).sav", to.data.frame=TRUE)
dataset16 <- read.spss("20180606161353OKCT0J19T3eemett7oXGADGnKfXJYfiA.sav", to.data.frame=TRUE)
dataset16 <- read.spss("20180606161353OKCT0J19T3eemett7oXGADGnKfXJYfiA.sav", to.data.frame=TRUE)
dataset16 <- read.spss("20180606161353OKCT0J19T3eemett7oXGADGnKfXJYfiA.SAV",to.data.frame=TRUE)
str(dataset16)
str(dataset17)
# Conducente FALTA PORQUE NO SÉ QUÉ ONDA CON EL DATASET
# 2016. NO EXISTE ESTE DATO PARA 2016
# 2017
dir_freq = as.data.frame(table(dataset17$CONDUCENTE))
colnames(dir_freq)<- c("Conducente","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
# Proporción de etnias
#----------------------
# De victimas
etniasVictimas <- table(datosP$VIC_GURPET)
myvars16 <- c("AGR_EDAD", "VIC_EDAD", "AGR_GURPET", "AGRESORES_OTROS_TOTAL", "INST_DONDE_DENUNCIO", "DEPTO_MCPIO")
newdata16 <- select(dataset16, one_of(myvars16))
myvars17 <- c("AGR_EDAD", "VIC_EDAD", "AGR_GURPET", "AGRESORES_OTROS_TOTAL", "INST_DONDE_DENUNCIO", "DEPTO_MCPIO")
newdata17 <- select(dataset17, one_of(myvars17))
datosP = merge(newdata16,newdata17, all.x=T)
# Proporción de etnias
#----------------------
# De victimas
etniasVictimas <- table(datosP$VIC_GURPET)
etniasVictimas
# Agresores con mayor numero de victimas
# ---------------------------------------
agresoresConMasVictimas <- (datosP$AGRESORES_OTROS_TOTAL)
masVictimas <- datos[order(datosP$AGRESORES_OTROS_TOTAL), c(31, 41)]
masVictimas <- datosP[order(datosP$AGRESORES_OTROS_TOTAL), c(31, 41)]
datosP$AGR_GURPET
# Proporción de etnias
#----------------------
# De victimas
etniasVictimas <- table(datosP$VIC_GURPET)
etniasVictimas
datosP$VIC_GURPET
myvars16 <- c("AGR_EDAD", "VIC_EDAD", "AGR_GURPET", "VIC_GURPET", "AGRESORES_OTROS_TOTAL", "INST_DONDE_DENUNCIO", "DEPTO_MCPIO")
newdata16 <- select(dataset16, one_of(myvars16))
myvars17 <- c("AGR_EDAD", "VIC_EDAD", "AGR_GURPET", "VIC_GURPET", "AGRESORES_OTROS_TOTAL", "INST_DONDE_DENUNCIO", "DEPTO_MCPIO")
newdata17 <- select(dataset17, one_of(myvars17))
myvars16 <- c("AGR_EDAD", "VIC_EDAD", "AGR_GURPET", "VIC_GRUPET", "AGRESORES_OTROS_TOTAL", "INST_DONDE_DENUNCIO", "DEPTO_MCPIO")
newdata16 <- select(dataset16, one_of(myvars16))
myvars17 <- c("AGR_EDAD", "VIC_EDAD", "AGR_GURPET", "VIC_GRUPET", "AGRESORES_OTROS_TOTAL", "INST_DONDE_DENUNCIO", "DEPTO_MCPIO")
newdata17 <- select(dataset17, one_of(myvars17))
datosP = merge(newdata16,newdata17, all.x=T)
# Proporción de etnias
#----------------------
# De victimas
etniasVictimas <- table(datosP$VIC_GURPET)
etniasVictimas
# Proporción de etnias
#----------------------
# De victimas
etniasVictimas <- table(datosP$VIC_GRUPET)
etniasVictimas
barplot(etniasVictimas, main="Etnias de las Víctimas", xlab = "Étnias", ylab = "Cantidad de personas")
# De agresores
etniasAgresores <- table(datosP$AGR_GURPET)
etniasAgresores
barplot(etniasAgresores, main="Etnias de los agresores", xlab = "Étnias", ylab = "Cantidad de personas")
# ARREGLAR ESTA!!!! NO ESTÁ FUNCIONANDO COMO DEBERÍA
# Etnias combinadas
etnias <- data.frame(etniasAgresores, etniasVictimas)
etnias
# Departamentos con mas denuncias
# ---------------------------------
departamentosDenuncias <- table(datosP$DEPTO_MCPIO)
departamentosDenuncias
barplot(departamentosDenuncias, main = "Denuncias por departamento", xlab = "Departamento", ylab = "Cantidad de personas",col=c("darkblue","red"))
# Edad mas comun de agresores y edad mas comun de victimas
# ---------------------------------------------------------
# Edades de los agresores
edadAgresores <- datosP$AGR_EDAD
tabEdadAgr <- table(edadAgresores)
barplot(tabEdadAgr, main = "Edades de los agresores", xlab = "Edades", ylab = "Cantidad de personas",col=c("darkblue","red"))
# Edades de las victimas
edadVictimas <- datosP$VIC_EDAD
tabEdadVic <- table(edadVictimas)
tabEdadVic
barplot(tabEdadVic, main = "Edades de las victimas", xlab = "Edades", ylab = "Cantidad de personas",col=c("darkblue","red"))
# Institucion que recibe mas denuncias
# ------------------------------------
instituciones <- datosP$INST_DONDE_DENUNCIO
tabInstituciones <- table(instituciones)
tabInstituciones
barplot(tabInstituciones, main = "Instituciones en las que se realizaron las denuncias", xlab = "Instituciones", ylab = "Cantidad de denuncias",col=c("darkblue","red", "green", "yellow", "black", "purple", "pink"))
# Merge para pruebas de normalidad
# ---------------------------------
myvars16 <- c("ANO_EMISION", "VIC_EDAD", "HEC_DIA", "HEC_ANO", "TOTAL_HIJOS", "NUM_HIJ_HOM", "NUM_HIJ_MUJ", "OTRAS_VICTIMAS", "VIC_OTRAS_HOM", "VIC_OTRAS_MUJ", "VIC_OTRAS_N_OS", "VIC_OTRAS_N_AS", "AGR_EDAD", "AGRESORES_OTROS_TOTAL", "AGR_OTROS_HOM", "AGR_OTRAS_MUJ", "AGR_OTROS_N_OS", "AGR_OTRAS_N_AS")
newdata16 <- select(dataset16, one_of(myvars16))
myvars17 <- c("ANO_EMISION", "VIC_EDAD", "HEC_DIA", "HEC_ANO", "TOTAL_HIJOS", "NUM_HIJ_HOM", "NUM_HIJ_MUJ", "OTRAS_VICTIMAS", "VIC_OTRAS_HOM", "VIC_OTRAS_MUJ", "VIC_OTRAS_N_OS", "VIC_OTRAS_N_AS", "AGR_EDAD", "AGRESORES_OTROS_TOTAL", "AGR_OTROS_HOM", "AGR_OTRAS_MUJ", "AGR_OTROS_N_OS", "AGR_OTRAS_N_AS")
newdata17 <- select(dataset17, one_of(myvars17))
datos = merge(newdata16,newdata17, all.x=T)
hist(as.numeric(datos$VIC_OTRAS_N_AS), col="lightcyan", main="Otras víctimas niñas")
qqnorm(as.numeric(datos$VIC_OTRAS_N_AS), main="Víctimas niñas")
qqline(as.numeric(datos$VIC_OTRAS_N_AS), col = "red")
ks.test(as.numeric(datos$VIC_OTRAS_N_AS),rnorm(length(as.numeric(dataset16$VIC_OTRAS_N_AS))))
hist(as.numeric(datos$AGR_EDAD), col="lightcyan", main="Otras víctimas niñas")
qqnorm(as.numeric(datos$AGR_EDAD), main="Víctimas niñas")
qqline(as.numeric(datos$AGR_EDAD), col = "red")
ks.test(as.numeric(datos$AGR_EDAD),rnorm(length(as.numeric(dataset16$AGR_EDAD))))
hist(as.numeric(datos$AGR_EDAD), col="lightcyan", main="Edad del agresor")
qqnorm(as.numeric(datos$AGR_EDAD), main="Edad del agresor")
qqline(as.numeric(datos$AGR_EDAD), col = "red")
ks.test(as.numeric(datos$AGR_EDAD),rnorm(length(as.numeric(dataset16$AGR_EDAD))))
hist(as.numeric(datos$AGRESORES_OTROS_TOTAL), col="lightcyan", main="Total otros agresores")
qqnorm(as.numeric(datos$AGRESORES_OTROS_TOTAL), main="Total otros agresores")
qqline(as.numeric(datos$AGRESORES_OTROS_TOTAL), col = "red")
ks.test(as.numeric(datos$AGRESORES_OTROS_TOTAL),rnorm(length(as.numeric(datos$AGRESORES_OTROS_TOTAL))))
hist(as.numeric(datos$AGR_OTROS_HOM), col="lightcyan", main="Total otros agresores hombres")
qqnorm(as.numeric(datos$AGR_OTROS_HOM), main="Total otros agresores hombres")
qqline(as.numeric(datos$AGR_OTROS_HOM), col = "red")
ks.test(as.numeric(datos$AGR_OTROS_HOM),rnorm(length(as.numeric(datos$AGR_OTROS_HOM))))
hist(as.numeric(datos$AGR_OTRAS_MUJ), col="lightcyan", main="Total otras agresoras mujeres")
qqnorm(as.numeric(datos$AGR_OTRAS_MUJ), main="Total otras agresoras mujeres")
qqline(as.numeric(datos$AGR_OTRAS_MUJ), col = "red")
ks.test(as.numeric(datos$AGR_OTRAS_MUJ),rnorm(length(as.numeric(datos$AGR_OTRAS_MUJ))))
# Otras victimas niñas
hist(as.numeric(datos$VIC_OTRAS_N_AS), col="lightcyan", main="Otras víctimas niñas")
# Otras victimas niñas
hist(as.numeric(datos$VIC_OTRAS_N_AS), col="lightcyan", main="Otras víctimas niñas", xlab = "Cantidad de otras víctimas niñas")
qqnorm(as.numeric(datos$VIC_OTRAS_N_AS), main="Víctimas niñas")
qqline(as.numeric(datos$VIC_OTRAS_N_AS), col = "red")
ks.test(as.numeric(datos$VIC_OTRAS_N_AS),rnorm(length(as.numeric(datos$VIC_OTRAS_N_AS))))
# Edad del agresor
hist(as.numeric(datos$AGR_EDAD), col="lightcyan", main="Edad del agresor", xlab = "Edades")
qqnorm(as.numeric(datos$AGR_EDAD), main="Edad del agresor")
qqline(as.numeric(datos$AGR_EDAD), col = "red")
ks.test(as.numeric(datos$AGR_EDAD),rnorm(length(as.numeric(datos$AGR_EDAD))))
# Total de otros agresores
hist(as.numeric(datos$AGRESORES_OTROS_TOTAL), col="lightcyan", main="Total otros agresores", xlab = "Cantidad de otros agresores")
qqnorm(as.numeric(datos$AGRESORES_OTROS_TOTAL), main="Total otros agresores")
qqline(as.numeric(datos$AGRESORES_OTROS_TOTAL), col = "red")
ks.test(as.numeric(datos$AGRESORES_OTROS_TOTAL),rnorm(length(as.numeric(datos$AGRESORES_OTROS_TOTAL))))
# Total de otros agresores hombres
hist(as.numeric(datos$AGR_OTROS_HOM), col="lightcyan", main="Total otros agresores hombres", xlab = "Cantidad de otros agresores hombres")
qqnorm(as.numeric(datos$AGR_OTROS_HOM), main="Total otros agresores hombres")
qqline(as.numeric(datos$AGR_OTROS_HOM), col = "red")
ks.test(as.numeric(datos$AGR_OTROS_HOM),rnorm(length(as.numeric(datos$AGR_OTROS_HOM))))
dir_freq = as.data.frame(table(dataset16$AGR_TRABAJA))
colnames(dir_freq)<- c("¿Trabaja? (agresor)","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$AGR_TRABAJA))
colnames(dir_freq)<- c("¿Trabaja? (agresor) 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$AGR_TRABAJA))
colnames(dir_freq)<- c("¿Trabaja? (agresor) 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$AGR_TRABAJA))
colnames(dir_freq)<- c("¿Trabaja? (agresor) 2017","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$AGR_OCUP))
colnames(dir_freq)<- c("Ocupación (agresor) 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$AGR_OCUP))
colnames(dir_freq)<- c("Ocupación (agresor) 2016","Frequencia 2016")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$AGR_OCUP))
colnames(dir_freq)<- c("Ocupación (agresor) 2017","Frequencia 2017")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$AGR_DEDICA))
colnames(dir_freq)<- c("Dedicación (agresor) 2016","Frequencia 2016")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$AGR_DEDICA))
colnames(dir_freq)<- c("Dedicación (agresor) 2017","Frequencia 2017")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$AGRESORES_OTROS_TOTAL))
colnames(dir_freq)<- c("Total de otros agresores 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$AGRESORES_OTROS_TOTAL))
colnames(dir_freq)<- c("Total de otros agresores 2017","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$AGR_OTROS_HOM))
colnames(dir_freq)<- c("Otros agresores hombres 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$AGR_OTROS_HOM))
colnames(dir_freq)<- c("Otros agresores hombres 2017","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$AGR_OTRAS_MUJ))
colnames(dir_freq)<- c("Otras agresoras mujeres 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$AGR_OTRAS_MUJ))
colnames(dir_freq)<- c("Otras agresoras mujeres 2017","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$AGR_OTROS_N_OS))
colnames(dir_freq)<- c("Otros agresores niños 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$AGR_OTROS_N_OS))
colnames(dir_freq)<- c("Otros agresores niños 2017","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$AGR_OTRAS_N_AS))
colnames(dir_freq)<- c("Otras agresoras niñas 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$AGR_OTRAS_N_AS))
colnames(dir_freq)<- c("Otras agresoras niñas 2017","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$INST_DONDE_DENUNCIO))
colnames(dir_freq)<- c("Instituto donde denunció 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$INST_DONDE_DENUNCIO))
colnames(dir_freq)<- c("Instituto donde denunció 2017","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$ORGANISMO_JURISDICCIONAL))
colnames(dir_freq)<- c("Organismo Juridisccional","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$ORGANISMO_JURISDICCIONAL))
colnames(dir_freq)<- c("Organismo Juridisccional","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$ORGANISMO_JURISDICCIONAL))
colnames(dir_freq)<- c("Organismo Juridisccional","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$ORGANISMO_JURISDICCIONAL))
colnames(dir_freq)<- c("Organismo Juridisccional 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
# Organismo jurisdiccional
# 2016
dir_freq = as.data.frame(table(dataset16$ORGANISMO_JURISDICCIONAL))
colnames(dir_freq)<- c("Organismo Juridisccional 2016","Frequencia")
dir_freq
# Organismo jurisdiccional
# 2016
dir_freq = as.data.frame(table(dataset16$ORGANISMO_JURISDICCIONAL))
dir_freq
dir_freq = as.data.frame(table(dataset17$ORGANISMO_JURISDICCIONAL))
colnames(dir_freq)<- c("Organismo Juridisccional 2017","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$CONDUCENTE))
colnames(dir_freq)<- c("Conducente","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$LEY_APLICABLE))
colnames(dir_freq)<- c("Ley Aplicable","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$LEY_APLICABLE))
colnames(dir_freq)<- c("Ley Aplicable","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset16$LEY_APLICABLE))
colnames(dir_freq)<- c("Ley Aplicable 2016","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dir_freq = as.data.frame(table(dataset17$LEY_APLICABLE))
colnames(dir_freq)<- c("Ley Aplicable 2017","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
# Proporción de etnias
#----------------------
# De victimas
etniasVictimas <- table(datosP$VIC_GRUPET)
etniasVictimas
etniasVictimas
# Merge para preguntas de analisis exploratorio
# ----------------------------------------------
myvars16 <- c("AGR_EDAD", "VIC_EDAD", "AGR_GURPET", "VIC_GRUPET", "AGRESORES_OTROS_TOTAL", "INST_DONDE_DENUNCIO", "DEPTO_MCPIO")
newdata16 <- select(dataset16, one_of(myvars16))
myvars17 <- c("AGR_EDAD", "VIC_EDAD", "AGR_GURPET", "VIC_GRUPET", "AGRESORES_OTROS_TOTAL", "INST_DONDE_DENUNCIO", "DEPTO_MCPIO")
newdata17 <- select(dataset17, one_of(myvars17))
datosP = merge(newdata16,newdata17, all.x=T)
datosP = merge(newdata16,newdata17, all.x=TRUE)
etniasAgresores <- table(datosP$AGR_GURPET)
etniasAgresores <- table(datosP$AGR_GURPET)
etniasAgresores
barplot(etniasVictimas, main="Etnias de las Víctimas", xlab = "Étnias", ylab = "Cantidad de personas")
barplot(etniasAgresores, main="Etnias de los agresores", xlab = "Étnias", ylab = "Cantidad de personas")
etnias <- data.frame(etniasAgresores, etniasVictimas)
etnias
# Departamentos con mas denuncias
# ---------------------------------
departamentosDenuncias <- table(datosP$DEPTO_MCPIO)
departamentosDenuncias
barplot(departamentosDenuncias, main = "Denuncias por departamento", xlab = "Departamento", ylab = "Cantidad de personas",col=c("darkblue","red"))
dept_freq = as.data.frame(departamentosDenuncias)
colnames(dir_freq)<- c("Departamento/municipio","Frequencia")
dir = dir_freq[order(dir_freq[,2], decreasing = TRUE), ]
dir
dept_freq <- as.data.frame(departamentosDenuncias)
colnames(dir_freq)<- c("Departamento/municipio","Frequencia")
dirDeptos <- dept_freq[order(dir_freq[,2], decreasing = TRUE), ]
dirDeptos
dirDeptos <- dept_freq[order(dir_freq[,2], decreasing = FALSE), ]
dirDeptos
barplot(departamentosDenuncias, main = "Denuncias por departamento/municipio", xlab = "Departamento", ylab = "Cantidad de personas",col=c("darkblue","red"))
departamentosDenuncias <- table(datosP$DEPTO_MCPIO)
departamentosDenuncias
# Edad mas comun de agresores y edad mas comun de victimas
# ---------------------------------------------------------
# Edades de los agresores
edadAgresores <- datosP$AGR_EDAD
tabEdadAgr <- table(edadAgresores)
barplot(tabEdadAgr, main = "Edades de los agresores", xlab = "Edades", ylab = "Cantidad de personas",col=c("darkblue","red"))
edadVictimas <- datosP$VIC_EDAD
tabEdadVic <- table(edadVictimas)
edadVictimas <- datosP$VIC_EDAD
tabEdadVic <- table(edadVictimas)
tabEdadVic
barplot(tabEdadVic, main = "Edades de las victimas", xlab = "Edades", ylab = "Cantidad de personas",col=c("darkblue","red"))
barplot(tabEdadAgr, main = "Edades de los agresores", xlab = "Edades", ylab = "Cantidad de personas",col=c("darkblue","red"))
# Institucion que recibe mas denuncias
# ------------------------------------
instituciones <- datosP$INST_DONDE_DENUNCIO
tabInstituciones <- table(instituciones)
tabInstituciones
barplot(tabInstituciones, main = "Instituciones en las que se realizaron las denuncias", xlab = "Instituciones", ylab = "Cantidad de denuncias",col=c("darkblue","red", "green", "yellow", "black", "purple", "pink"))
#-----------------------------------------------------------------------------------------------------------------------------------------------
# Librerias a utilizar
library(caret)
library(fmsb)
library(e1071)
library(mlr)
# Set del working directory de Andrea
setwd("~/2019/UVG/Primer Semestre/Minería de Datos/Laboratorios/Laboratorio5/HDT5NaiveBayes/Datos")
# Se cargan todos los datos
datitus <- read.csv("train2.csv")
str(datitus) # Tipos de variables de las columnas de la base de datos
# Se seleccionan las variables numericas
datos <- datitus[, c("Type", "Age", "Breed1", "Breed2", "Gender", "Color1", "Color2", "Color3", "MaturitySize", "FurLength", "Vaccinated", "Dewormed", "Sterilized", "Health", "Quantity", "Fee", "State", "AdoptionSpeed")]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos), nrow(datos)*porcentaje)
train <- datos[corte,]
test <- datos[-corte,]
modeloNB <- naiveBayes(as.factor(AdoptionSpeed)~Type, data = train)
modeloNB
prediccion <- predict(modeloNB, newdata = test)
prediccion
table(prediccion, test$AdoptionSpeed)
#resultados14 <- data.frame(test$y, round(prediccionMSpByPL4, 0))
#names(resultados14) <- c("real", "prediccion")
#resultados14$real
#u <- union(test$, resultados14$prediccion)
#t <- table(factor(resultados14$real, u4), factor(resultados14$prediccion, u4))
confusionMatrix(prediccion$AdoptionSpeed, test$AdoptionSpeed)
modeloNB <- naiveBayes(as.factor(AdoptionSpeed)~Type + Age, data = train)
prediccion <- predict(modeloNB, newdata = test)
table(prediccion, test$AdoptionSpeed)
#resultados14 <- data.frame(test$y, round(prediccionMSpByPL4, 0))
#names(resultados14) <- c("real", "prediccion")
#resultados14$real
#u <- union(test$, resultados14$prediccion)
#t <- table(factor(resultados14$real, u4), factor(resultados14$prediccion, u4))
confusionMatrix(prediccion$AdoptionSpeed, test$AdoptionSpeed)
#resultados14 <- data.frame(test$y, round(prediccionMSpByPL4, 0))
#names(resultados14) <- c("real", "prediccion")
#resultados14$real
#u <- union(test$, resultados14$prediccion)
#t <- table(factor(resultados14$real, u4), factor(resultados14$prediccion, u4))
confusionMatrix(as.factor(prediccion), as.factor(test$AdoptionSpeed)
#resultados14 <- data.frame(test$y, round(prediccionMSpByPL4, 0))
#names(resultados14) <- c("real", "prediccion")
#resultados14$real
#u <- union(test$, resultados14$prediccion)
#t <- table(factor(resultados14$real, u4), factor(resultados14$prediccion, u4))
confusionMatrix((as.factor(prediccion)), (as.factor(test$AdoptionSpeed)))
#resultados14 <- data.frame(test$y, round(prediccionMSpByPL4, 0))
#names(resultados14) <- c("real", "prediccion")
#resultados14$real
#u <- union(test$, resultados14$prediccion)
#t <- table(factor(resultados14$real, u4), factor(resultados14$prediccion, u4))
confusionMatrix(as.factor(prediccion), as.factor(test$AdoptionSpeed))
modeloNB <- naiveBayes(as.factor(AdoptionSpeed)~Type, data = train)
prediccion <- predict(modeloNB, newdata = test)
table(prediccion, test$AdoptionSpeed)
#resultados14 <- data.frame(test$y, round(prediccionMSpByPL4, 0))
#names(resultados14) <- c("real", "prediccion")
#resultados14$real
#u <- union(test$, resultados14$prediccion)
#t <- table(factor(resultados14$real, u4), factor(resultados14$prediccion, u4))
confusionMatrix(as.factor(prediccion), as.factor(test$AdoptionSpeed))
modeloNB <- naiveBayes(as.factor(AdoptionSpeed)~Type + Breed1, data = train)
prediccion <- predict(modeloNB, newdata = test)
table(prediccion, test$AdoptionSpeed)
#resultados14 <- data.frame(test$y, round(prediccionMSpByPL4, 0))
#names(resultados14) <- c("real", "prediccion")
#resultados14$real
#u <- union(test$, resultados14$prediccion)
#t <- table(factor(resultados14$real, u4), factor(resultados14$prediccion, u4))
confusionMatrix(as.factor(prediccion), as.factor(test$AdoptionSpeed))
