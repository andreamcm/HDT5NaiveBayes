#Asignacion de base de datos a variable
movies <- read.csv("tmdb-movies.csv")
movies <- read.csv("tmdb-movies.csv")
# Set del working directory de Andrea
setwd("~/2019/UVG/Primer Semestre/MinerÃ­a de Datos/Laboratorios/Laboratorio5/HDT5NaiveBayes/Datos")
# Se cargan todos los datos
datos <- read.csv("train2.csv")
str(datos) # Tipos de variables de las columnas de la base de datos
porcentaje<-0.7
datos<-iris
set.seed(123)
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
train<-datos[corte,]
test<-datos[-corte,]
modelo <- naiveBayes(AdoptionSpeed~., data = train)
install.packages("e1071")
library(e1071)
modelo <- naiveBayes(AdoptionSpeed~., data = train)
modelo <- naiveBayes(datos$AdoptionSpeed~., data = train)
modelo <- naiveBayes(Names~., data = train)
modelo <- naiveBayes(Type~., data = train)
modelo <- naiveBayes(Type~., data = train)
# Se cargan todos los datos
datos <- read.csv("train2.csv")
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
train<-datos[corte,]
test<-datos[-corte,]
modelo <- naiveBayes(Type~., data = train)
prediction <- predict(modelo, newdata = test)
confusionMatrix(prediction, test$AdoptionSpeed)
#-----------------------------------------------------------------------------------------------------------------------------------------------
# Librerias a utilizar
library(caret)
confusionMatrix(predBayes,test$Species)
confusionMatrix(prediction, test$AdoptionSpeed)
prediction
prediction <- predict(modelo, newdata = test)
prediction
modelo <- naiveBayes(Type~., data = train)
modelo
prediction <- predict(modelo, newdata = test)
prediction
modelo <- naiveBayes(AdoptionSpeed~., data = train)
prediction <- predict(modelo, newdata = test)
prediction
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
train<-datos[corte,]
test<-datos[-corte,]
modelo <- naiveBayes(AdoptionSpeed~., data = train)
prediction <- predict(modelo, newdata = test)
prediction
modeloNB <- naiveBayes(AdoptionSpeed~., data = train)
prediction <- predict(modelo, newdata = test)
prediction
prediction
prediction <- predict(modelo, newdata = test)
prediction
prediction <- predict(modeloNB, newdata = test)
prediction
?data.frame
resultado <- data.frame(AdoptionSpeed, round(prediction, 0))
resultado <- data.frame(AdoptionSpeed~., round(prediction, 0))
resultado <- data.frame(modeloNB, round(prediction, 0))
resultado <- data.frame(modeloNB)
resultado <- data.frame(prediction)
resultado
prediction <- predict(modeloNB, data = test)
prediction <- predict(modeloNB, newdata = test)
prediction
modeloNB <- naiveBayes(Types~., data = train)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos), nrow(datos)*porcentaje)
train<-datos[corte,]
test<-datos[-corte,]
modeloNB <- naiveBayes(Types~., data = train)
modeloNB <- naiveBayes(Names~., data = train)
# Se cargan todos los datos
datos <- read.csv("train2.csv")
modeloNB <- naiveBayes(Names~., data = train)
modeloNB <- naiveBayes(AdoptionSpeed~., data = train)
modeloNB <- naiveBayes(Type~., data = train)
prediction <- predict(modeloNB, newdata = test)
prediction
modeloNB <- naiveBayes(Breed1~., data = train)
prediction <- predict(modeloNB, newdata = test)
prediction
